#########################################################################################
##  Build DALI dependencies on top of manylinux2014
##  DALI is based on "manylinux2014", official page https://github.com/pypa/manylinux
#########################################################################################
ARG FROM_IMAGE_NAME=quay.io/pypa/manylinux_2_28_x86_64
ARG BUILDER_EXTRA_DEPS=scratch
FROM ${BUILDER_EXTRA_DEPS} as extra_deps
FROM ${FROM_IMAGE_NAME}

ENV PATH=/opt/rh/gcc-toolset-11/root/usr/bin:$PATH

# Install yum Dependencies
RUN yum install -y wget doxygen graphviz gettext xz openssl autogen zip \
                   gcc-toolset-11 \
                   gcc-toolset-11-libasan-devel gcc-toolset-11-liblsan-devel \
                   gcc-toolset-11-libtsan-devel gcc-toolset-11-libubsan-devel \
                   perl perl-IPC-Cmd nasm

ENV ACLOCAL_PATH=/usr/share/aclocal/:/usr/local/share/aclocal

RUN CMAKE_VERSION=3.20.1 && CMAKE_ARCH=$(uname -m) && \
    wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-${CMAKE_ARCH}.sh && \
    test -e /bin/sh || ln -s /usr/bin/sh /bin/sh && \
    chmod +x cmake-${CMAKE_VERSION}-linux-${CMAKE_ARCH}.sh && \
    ./cmake-${CMAKE_VERSION}-linux-${CMAKE_ARCH}.sh --prefix=/usr/local --skip-license && \
    rm -rf cmake-${CMAKE_VERSION}-linux-${CMAKE_ARCH}.sh

# Clang, build it before deps as deps changes more frequently
RUN CLANG_VERSION=17.0.6                                                                           && \
    cd /tmp                                                                                        && \
    wget https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-${CLANG_VERSION}.tar.gz    && \
    tar -xf llvmorg-*.tar.gz                                                                       && \
    rm -rf llvmorg-*.tar.gz                                                                        && \
    cd llvm-*                                                                                      && \
    mkdir build                                                                                    && \
    cd build                                                                                       && \
    cmake -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra" -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm && \
    make -j"$(grep ^processor /proc/cpuinfo | wc -l)" install                                      && \
    cd /tmp                                                                                        && \
    rm -rf llvm-*

COPY DALI_DEPS_VERSION /tmp

ARG DALI_DEPS_REPO
ENV DALI_DEPS_REPO=${DALI_DEPS_REPO:-https://github.com/NVIDIA/DALI_deps}

ARG DALI_DEPS_VERSION_SHA
ENV DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA}

# run in /bin/bash to have more advanced features supported like list
RUN /bin/bash -c 'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA:-$(cat /tmp/DALI_DEPS_VERSION)}    && \
    git clone ${DALI_DEPS_REPO} /tmp/dali_deps                                                     && \
    cd /tmp/dali_deps                                                                              && \
    git checkout ${DALI_DEPS_VERSION_SHA}                                                          && \
    git submodule init                                                                             && \
    git submodule update --depth 1 --init --recursive                                              && \
    export CC_COMP=${CC}                                                                           && \
    export CXX_COMP=${CXX}                                                                         && \
    /tmp/dali_deps/build_scripts/build_deps.sh && rm -rf /tmp/dali_deps && rm -rf /tmp/DALI_DEPS_VERSION'

# extra deps
COPY --from=extra_deps / /
