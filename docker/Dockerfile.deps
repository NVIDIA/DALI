#########################################################################################
##  Build DALI dependencies on top of manylinux2014
##  DALI is based on "manylinux2014", official page https://github.com/pypa/manylinux
#########################################################################################
ARG FROM_IMAGE_NAME=quay.io/pypa/manylinux2014_x86_64
ARG BUILDER_EXTRA_DEPS=scratch
ARG DALI_DEPS_REPO=XXXX
FROM ${BUILDER_EXTRA_DEPS} as extra_deps
FROM ${FROM_IMAGE_NAME}

# Install yum Dependencies
RUN yum install -y wget nasm doxygen graphviz gettext xz openssl autogen
ENV ACLOCAL_PATH=/usr/share/aclocal/:/usr/local/share/aclocal

# add devtoolset-7 to paths
ENV PATH=/opt/rh/devtoolset-7/root/usr/bin:$PATH \
    LD_LIBRARY_PATH=/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/opt/rh/devtoolset-7/root/usr/lib64/dyninst:/opt/rh/devtoolset-7/root/usr/lib/dynin:$LD_LIBRARY_PATH

# CUDA 10 doesn't support gcc > 7 so install 7 and remove other
RUN yum remove -y devtoolset* && \
    yum install -y devtoolset-7

# Don't want the short-unicode version for Python 2.7
RUN rm -f /opt/python/cp27-cp27m

COPY third_party/ /tmp/dali_deps
COPY docker/Makefile-lmdb.patch /tmp/dali_deps/
COPY docker/opencv-qnx.patch /tmp/dali_deps/
RUN cd /tmp/dali_deps                                          && \
    export CC_COMP=${CC}                                       && \
    export CXX_COMP=${CXX}                                     && \
    export CMAKE_TARGET_ARCH="$(uname -m)"                     && \
    export OPENCV_TOOLCHAIN_FILE="linux/gnu.toolchain.cmake"   && \
    export WITH_FFMPEG=1                                       && \
    ./build_deps.sh && rm -rf /tmp/dali_deps

# Clang, but only for x86_64
RUN if [ "$(uname -m)" == "x86_64" ]; then \
        CLANG_VERSION=10.0.0 && \
        cd /usr/local && \
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-${CLANG_VERSION}/clang+llvm-${CLANG_VERSION}-x86_64-linux-sles11.3.tar.xz && \
        tar -xJf clang+llvm-*.tar.xz --strip 1 && \
        rm clang+llvm-*.tar.xz; \
    fi

# extra deps
COPY --from=extra_deps / /
