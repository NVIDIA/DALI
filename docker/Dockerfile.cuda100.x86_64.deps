ARG TOOLKIT_BASE_IMAGE=ubuntu:18.04
FROM ${TOOLKIT_BASE_IMAGE} as cuda

RUN apt update && apt install -y libxml2 curl perl gcc && \
    rm -rf /var/lib/apt/lists/*

RUN CUDA_VERSION=10.0 && \
    CUDA_BUILD=10.0.130_410.48 && \
    curl -LO https://developer.nvidia.com/compute/cuda/${CUDA_VERSION}/Prod/local_installers/cuda_${CUDA_BUILD}_linux && \
    chmod +x cuda_${CUDA_BUILD}_linux && \
    ./cuda_${CUDA_BUILD}_linux --silent --no-opengl-libs --toolkit && \
    rm -f cuda_${CUDA_BUILD}_linux; \
    # nvJpeg
    CUDA_VERSION=10.0 && \
    CUDA_PATCH=1 && \
    CUDA_BUILD=10.0.130.1 && \
    curl -LO  https://developer.download.nvidia.com/compute/cuda/${CUDA_VERSION}/Prod/patches/${CUDA_PATCH}/cuda_${CUDA_BUILD}_linux.run && \
    chmod +x cuda_${CUDA_BUILD}_linux.run && \
    ./cuda_${CUDA_BUILD}_linux.run --silent --accept-eula && \
    rm -f cuda_${CUDA_BUILD}_linux-run; \
    # CUDA 10 doesn't have targets so create one to make it compatible with GDS layout
    mkdir -p /usr/local/cuda/targets/x86_64-linux && \
    mv /usr/local/cuda/lib64 /usr/local/cuda/targets/x86_64-linux/lib && \
    mv /usr/local/cuda/include /usr/local/cuda/targets/x86_64-linux && \
    ln -s targets/x86_64-linux/lib /usr/local/cuda/lib64 && \
    ln -s targets/x86_64-linux/include /usr/local/cuda/include
