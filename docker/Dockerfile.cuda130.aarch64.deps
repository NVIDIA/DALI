ARG TOOLKIT_BASE_IMAGE=ubuntu:20.04
FROM ${TOOLKIT_BASE_IMAGE} AS cuda

ENV DEBIAN_FRONTEND=noninteractive

# Change cuda version to pick the latest update
RUN CUDA_VERSION=13.0U1 && \
    NVJPEG2K_VERSION=0.9.0.43-1 && \
    CUFILE_VERSION=1.15.1.6-1 && \
    CUDA_VERSION_MAJOR=13 && \
    CUDA_VERSION_MINOR=8 && \
    apt-get update && \
    apt-get install wget software-properties-common -y && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/sbsa/3bf863cc.pub && \
    add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/sbsa/ /" && \
    apt-get update && \
    apt install -y \
        cuda-cudart-13-0 \
        cuda-cudart-dev-13-0 \
        cuda-driver-dev-13-0 \
        cuda-cccl-13-0 \
        cuda-nvcc-13-0 \
        cuda-nvdisasm-13-0 \
        cuda-nvml-dev-13-0 \
        cuda-nvtx-13-0 \
        libcurand-13-0 \
        libcurand-dev-13-0 \
        libnpp-13-0 \
        libnpp-dev-13-0 \
        libnvjpeg-13-0 \
        libnvjpeg-dev-13-0 \
        libcufft-13-0 \
        libcufft-dev-13-0 \
        libcufile-dev-13-0=${CUFILE_VERSION} \
        libcusolver-dev-13-0 \
        libcublas-dev-13-0 \
        cuda-compat-13-0 && \
    apt-get install libnvjpeg2k0-dev-cuda-${CUDA_VERSION_MAJOR}=${NVJPEG2K_VERSION} \
                    libnvjpeg2k0-cuda-${CUDA_VERSION_MAJOR}=${NVJPEG2K_VERSION} \
                    libnvjpeg2k0-static-cuda-${CUDA_VERSION_MAJOR}=${NVJPEG2K_VERSION} -y && \
    cp /usr/include/libnvjpeg2k/${CUDA_VERSION_MAJOR}/* /usr/local/cuda/include/ && \
    cp /usr/lib/sbsa-linux-gnu/libnvjpeg2k/${CUDA_VERSION_MAJOR}/* /usr/local/cuda/lib64/ && \
    mkdir /tmp/nvcomp && cd /tmp/nvcomp && \
    wget https://developer.download.nvidia.com/compute/nvcomp/redist/nvcomp/linux-sbsa/nvcomp-linux-sbsa-5.0.0.6_cuda13-archive.tar.xz && \
    tar -xf * && \
    cp -r nvcomp-linux-sbsa-5.0.0.6_cuda13-archive/include/* /usr/local/cuda/include/ && \
    cp -r nvcomp-linux-sbsa-5.0.0.6_cuda13-archive/lib/* /usr/local/cuda/lib64/ && \
    cd / && rm -rf /tmp/nvcomp && \
    mv /usr/local/cuda/bin/fatbinary /usr/local/cuda/bin/fatbinary_org && \
    # fatbinary removed one of the options while clang still uses it
    # this creates a wrapper for a fatbinary which translates this argument when used
    echo "#!/bin/bash\\n\
real_fatbinary=\$(which fatbinary_org || which fatbinary)\\n\
# If we can't find the real fatbinary, exit with error\\n\
if [ -z \"\$real_fatbinary\" ]; then\\n\
    echo \"Error: Could not find real fatbinary executable\" >&2\\n\
    exit 1\\n\
fi\\n\
args=()\\n\
while [ \$# -gt 0 ]; do\\n\
    case \"\$1\" in\\n\
        --image=*)\\n\
            specs=\$1\\n\
            shift\\n\
            new_spec=\$(echo \"\$specs\" | sed 's/image=/image3=/g' | sed 's/profile=sm_/kind=elf,sm=/g')\\n\
            args+=(\"\${new_spec[@]}\")\\n\
            ;;\\n\
        *)\\n\
            args+=(\"\$1\")\\n\
            ;;\\n\
    esac\\n\
    shift\\n\
done\\n\
exec \"\$real_fatbinary\" \"\${args[@]}\"" > /usr/local/cuda/bin/fatbinary && \
    chmod a+x /usr/local/cuda/bin/fatbinary && \
    rm -rf /var/lib/apt/lists/*
